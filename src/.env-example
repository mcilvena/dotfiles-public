# =============================================================================
# Dotfiles Environment Configuration
# =============================================================================
# Copy this file to .env and configure with your personal values
# Source: cp .env-example .env

# =============================================================================
# AI Assistant Configuration
# =============================================================================

# Anthropic API Key - Required for AI assistance features in Neovim
# Get your API key from: https://console.anthropic.com/
# Used by: CodeCompanion plugin for AI-powered code assistance
ANTHROPIC_API_KEY=your_anthropic_api_key_here

# CodeCompanion AI Adapter - Choose your preferred AI provider
# Options: anthropic, gemini, ollama
# Default: anthropic
CODECOMPANION_ADAPTER=anthropic

# AI Model Configuration
# Customize which models to use for each provider
CODECOMPANION_ANTHROPIC_MODEL=claude-3-7-sonnet-latest
CODECOMPANION_GEMINI_MODEL=gemini-2.5-pro-preview-03-25
CODECOMPANION_OLLAMA_MODEL=gemma3:latest

# =============================================================================
# WSL/Windows Integration
# =============================================================================

# Dotfiles root directory - Used by sync scripts
# Default: $HOME/dotfiles
DOTFILES_ROOT=$HOME/dotfiles

# Windows username for WSL WezTerm config sync
# Default: Current WSL username
# Only needed if your Windows username differs from WSL username
WINDOWS_USER=your_windows_username

# =============================================================================
# AWS Configuration
# =============================================================================

# Path to custom AWS authentication script
# Used for specialized AWS authentication workflows
# Default: $HOME/code/aws-auth-bash/auth.sh
AWS_AUTH_SCRIPT=$HOME/code/aws-auth-bash/auth.sh

# =============================================================================
# Development Tools Configuration
# =============================================================================

# Node Version Manager directory
# Default: $HOME/.nvm
NVM_DIR=$HOME/.nvm

# PNPM package manager home directory
# Default: $HOME/.local/share/pnpm
PNPM_HOME=$HOME/.local/share/pnpm

# =============================================================================
# XDG Base Directory Specification
# =============================================================================

# XDG cache directory - Used by various tools for caching
# Default: $HOME/.cache
XDG_CACHE_HOME=$HOME/.cache

# XDG data directory - Used for application data storage
# Default: $HOME/.local/share
XDG_DATA_HOME=$HOME/.local/share

# =============================================================================
# Terminal Configuration
# =============================================================================

# Terminal type specification
# Default: xterm-256color
TERM=xterm-256color

# Default text editor
# Default: nvim
EDITOR=nvim

# Visual editor (typically same as EDITOR)
# Default: nvim
VISUAL=nvim

# Bat syntax highlighter theme
# Default: "Catppuccin Mocha"
BAT_THEME="Catppuccin Mocha"

# =============================================================================
# FZF Fuzzy Finder Configuration
# =============================================================================

# Default command for FZF
# Default: "fd --hidden --strip-cwd-prefix --exclude .git"
FZF_DEFAULT_COMMAND="fd --hidden --strip-cwd-prefix --exclude .git"

# FZF Ctrl+T file finder command
# Default: Same as FZF_DEFAULT_COMMAND
FZF_CTRL_T_COMMAND="fd --hidden --strip-cwd-prefix --exclude .git"

# FZF Alt+C directory finder command
# Default: "fd --type=d --hidden --strip-cwd-prefix --exclude .git"
FZF_ALT_C_COMMAND="fd --type=d --hidden --strip-cwd-prefix --exclude .git"

# =============================================================================
# SSH Configuration
# =============================================================================

# SSH authentication socket for 1Password integration
# Only needed on systems with 1Password SSH agent
# Default: "$HOME/.1password/agent.sock" (Arch Linux only)
# SSH_AUTH_SOCK="$HOME/.1password/agent.sock"

# =============================================================================
# Plugin Manager Configuration
# =============================================================================

# Zinit plugin manager installation directory
# Default: "${XDG_DATA_HOME:-${HOME}/.local/share}/zinit/zinit.git"
ZINIT_HOME="${XDG_DATA_HOME:-${HOME}/.local/share}/zinit/zinit.git"

# =============================================================================
# Usage Instructions
# =============================================================================
# 
# 1. Copy this file: cp .env-example .env
# 2. Edit .env with your personal values
# 3. The .env file will be automatically sourced by your shell configuration
# 4. Most variables have sensible defaults and are optional
# 5. Required variables:
#    - ANTHROPIC_API_KEY (for AI features)
# 6. WSL-specific variables:
#    - DOTFILES_ROOT (if different from default)
#    - WINDOWS_USER (if different from WSL username)
# 
# Note: The .env file is ignored by git to prevent accidentally committing
# sensitive information like API keys.
